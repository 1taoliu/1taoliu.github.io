<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/04/10/%E9%85%8D%E7%BD%AEhttps%E8%AF%81%E4%B9%A6/"/>
    <url>/2022/04/10/%E9%85%8D%E7%BD%AEhttps%E8%AF%81%E4%B9%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="搭建Tomcat-Https支持"><a href="#搭建Tomcat-Https支持" class="headerlink" title="搭建Tomcat Https支持"></a>搭建Tomcat Https支持</h1><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="第一步：生成秘钥库"><a href="#第一步：生成秘钥库" class="headerlink" title="第一步：生成秘钥库"></a>第一步：生成秘钥库</h2><p><strong>我们采用JDK自带的keytool工具生成秘钥库</strong></p><p>**别名 master 存储路径 ‪E:\apache-tomcat-9.0.58\keys\    **</p><figure class="highlight shell"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs shell">keytool -genkey -v -alias master -keyalg RSA -keystore ‪E:\apache-tomcat-9.0.58\keys\cas.keystore<br></code></pre></td></tr></table></figure><p><strong>这里需要填写一些信息，注意填写要域名；</strong></p><p><strong>秘钥库密码我们用 123456</strong></p><p><strong>执行完，会生成一个秘钥库文件；</strong></p><h2 id="第二步：从秘钥库里导出证书"><a href="#第二步：从秘钥库里导出证书" class="headerlink" title="第二步：从秘钥库里导出证书"></a>第二步：从秘钥库里导出证书</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">keytool -export -trustcacerts -alias master -file E:\apache-tomcat-9.0.58\keys\cas.cer -keystore E:\apache-tomcat-9.0.58\keys\cas.keystore<br></code></pre></td></tr></table></figure><p><strong>输入第一步的秘钥库密码 666,即可生成证书；</strong></p><h2 id="第三步：将证书导入到JDK证书库"><a href="#第三步：将证书导入到JDK证书库" class="headerlink" title="第三步：将证书导入到JDK证书库"></a>第三步：将证书导入到JDK证书库</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">keytool -import -trustcacerts -alias master -file E:\apache-tomcat-9.0.58\keys\cas.cer -keystore &quot;E:\jdk\jre\lib\security\cacerts&quot;<br></code></pre></td></tr></table></figure><p><strong><u>密码： changeit</u></strong></p><h2 id="第四步：tomcat配置https支持"><a href="#第四步：tomcat配置https支持" class="headerlink" title="第四步：tomcat配置https支持"></a>第四步：tomcat配置https支持</h2><p><code>&lt;Connector port=&quot;8443&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</code></p><p>​        <code>maxThreads=&quot;150&quot; SSLEnabled=&quot;true&quot; scheme=&quot;https&quot; secure=&quot;true&quot;</code></p><p>​        <code>clientAuth=&quot;false&quot; sslProtocol=&quot;TLS&quot;</code> </p><p>​        <code>keystoreFile=&quot;E:\apache-tomcat-9.0.58\keys\cas.keystore&quot;</code></p><p>​        <code>keystorePass=&quot;123456&quot; /&gt;</code></p><p>启动bin下的startup.bat</p><p>（默认有中文乱码，可以我们来到tomcat目录的conf子目录中，找到一个名为 “logging.properties” 的文件，打开这个文本文件，找到如下配置项：</p><p>java.util.logging.ConsoleHandler.encoding &#x3D; UTF-8</p><p>将 UTF-8 修改为 GBK，修改后的效果为：</p><p>java.util.logging.ConsoleHandler.encoding &#x3D; GBK</p><p>保存后，重启tomcat！） </p><h2 id="第五步：测试"><a href="#第五步：测试" class="headerlink" title="第五步：测试"></a>第五步：测试</h2><p>访问 <a href="https://localhost:8443/">https://localhost:8443</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
